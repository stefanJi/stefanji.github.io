<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>设计模式 on Yang Blog</title>
    <link>https://blog.jiyang.site/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on Yang Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 29 Jun 2019 14:22:44 +0000</lastBuildDate>
    
        <atom:link href="https://blog.jiyang.site/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>装饰者模式</title>
        <link>https://blog.jiyang.site/posts/2019-06-29-%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Sat, 29 Jun 2019 14:22:44 +0000</pubDate>
        
        <atom:modified>Sat, 29 Jun 2019 14:22:44 +0000</atom:modified>
        <guid>https://blog.jiyang.site/posts/2019-06-29-%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
        <description>&lt;p&gt;使用装饰者模式代替单纯的继承，更好的实现功能的扩展&lt;/p&gt;</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>工厂方法模式</title>
        <link>https://blog.jiyang.site/posts/2019-05-19-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Sun, 19 May 2019 19:56:52 +0000</pubDate>
        
        <atom:modified>Sun, 19 May 2019 19:56:52 +0000</atom:modified>
        <guid>https://blog.jiyang.site/posts/2019-05-19-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</guid>
        <description>&lt;p&gt;在需要生成复杂对象的地方，可以使用工厂方法模式。&lt;/p&gt;</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>使程序运行更高效-原型模式</title>
        <link>https://blog.jiyang.site/posts/2019-04-27-%E4%BD%BF%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%9B%B4%E9%AB%98%E6%95%88-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Sat, 27 Apr 2019 09:45:31 +0000</pubDate>
        
        <atom:modified>Sat, 27 Apr 2019 09:45:31 +0000</atom:modified>
        <guid>https://blog.jiyang.site/posts/2019-04-27-%E4%BD%BF%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%9B%B4%E9%AB%98%E6%95%88-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
        <description></description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>时势造英雄-策略模式</title>
        <link>https://blog.jiyang.site/posts/2019-04-01-%E6%97%B6%E5%8A%BF%E9%80%A0%E8%8B%B1%E9%9B%84-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Mon, 01 Apr 2019 22:41:06 +0000</pubDate>
        
        <atom:modified>Mon, 01 Apr 2019 22:41:06 +0000</atom:modified>
        <guid>https://blog.jiyang.site/posts/2019-04-01-%E6%97%B6%E5%8A%BF%E9%80%A0%E8%8B%B1%E9%9B%84-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</guid>
        <description></description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>应用最广的模式-单例模式</title>
        <link>https://blog.jiyang.site/posts/2019-03-22-%E5%BA%94%E7%94%A8%E6%9C%80%E5%B9%BF%E7%9A%84%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Fri, 22 Mar 2019 20:09:17 +0000</pubDate>
        
        <atom:modified>Fri, 22 Mar 2019 20:09:17 +0000</atom:modified>
        <guid>https://blog.jiyang.site/posts/2019-03-22-%E5%BA%94%E7%94%A8%E6%9C%80%E5%B9%BF%E7%9A%84%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
        <description></description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>面向对象六大原则</title>
        <link>https://blog.jiyang.site/posts/2019-02-21-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%85%AD%E5%A4%A7%E5%8E%9F%E5%88%99/</link>
        <pubDate>Thu, 21 Feb 2019 12:16:57 +0000</pubDate>
        
        <atom:modified>Thu, 21 Feb 2019 12:16:57 +0000</atom:modified>
        <guid>https://blog.jiyang.site/posts/2019-02-21-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%85%AD%E5%A4%A7%E5%8E%9F%E5%88%99/</guid>
        <description>六大原则简单描述 单一职责原则：一个类中应该是相关性很强的一类函数。 开闭原则：对扩展开放，对修改封闭。实现扩展的方法是使用抽象和依赖注入。将可</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>设计模式</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>