<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>计算机网络 on Yang Blog</title>
    <link>https://jiyang.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 计算机网络 on Yang Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>©2023, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 15 Mar 2020 13:23:43 +0000</lastBuildDate>
    
        <atom:link href="https://jiyang.site/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>当我尝试自己实现TLS时，我遇到了这些问题</title>
        <link>https://jiyang.site/posts/2020-03-15-%E5%BD%93%E6%88%91%E5%B0%9D%E8%AF%95%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0tls%E6%97%B6%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98/</link>
        <pubDate>Sun, 15 Mar 2020 13:23:43 +0000</pubDate>
        
        <atom:modified>Sun, 15 Mar 2020 13:23:43 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2020-03-15-%E5%BD%93%E6%88%91%E5%B0%9D%E8%AF%95%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0tls%E6%97%B6%E6%88%91%E9%81%87%E5%88%B0%E4%BA%86%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98/</guid>
        <description>花费接近一周的业余时间，基本实现了基于 TLS 1.2 的通信过程。在这期间遇到了许多问题，在此记录。 实现的源码在: https://github.com/stefanJi/CNP/tree/master/TLSImpl 字节序问题 由于我代码使用基于 JVM 的语言</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
          
            
              <category>TLS</category>
            
          
        
        
          
            
              <category>计算机网络</category>
            
          
        
        
      </item>
      
      <item>
        <title>理解Linux内部网络实现之关键数据结构 net_device</title>
        <link>https://jiyang.site/posts/2020-01-05-%E7%90%86%E8%A7%A3linux%E5%86%85%E9%83%A8%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%85%B3%E9%94%AE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B-net_device/</link>
        <pubDate>Sun, 05 Jan 2020 11:15:35 +0000</pubDate>
        
        <atom:modified>Sun, 05 Jan 2020 11:15:35 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2020-01-05-%E7%90%86%E8%A7%A3linux%E5%86%85%E9%83%A8%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%85%B3%E9%94%AE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B-net_device/</guid>
        <description>Understanding Linux Networking internal 系列之 Critical Data Structures 背景 在 Linux 的网络栈实现代码中，引用到了一些数据结构。要理解 Linux 内部的网络实现，需要先理清这些数据结构的作用。关键数据结构主要</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>计算机网络</category>
            
          
            
              <category>读书笔记</category>
            
          
            
              <category>Linux</category>
            
          
        
        
      </item>
      
      <item>
        <title>理解Linux内部网络实现之关键数据结构 sk_buff</title>
        <link>https://jiyang.site/posts/2020-01-02-%E7%90%86%E8%A7%A3linux%E5%86%85%E9%83%A8%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%85%B3%E9%94%AE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B-sk_buff/</link>
        <pubDate>Thu, 02 Jan 2020 23:49:09 +0000</pubDate>
        
        <atom:modified>Thu, 02 Jan 2020 23:49:09 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2020-01-02-%E7%90%86%E8%A7%A3linux%E5%86%85%E9%83%A8%E7%BD%91%E7%BB%9C%E5%AE%9E%E7%8E%B0%E4%B9%8B%E5%85%B3%E9%94%AE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B-sk_buff/</guid>
        <description>Understanding Linux Networking internal 系列之 Critical Data Structures 背景 在 Linux 的网络栈实现代码中，引用到了一些数据结构。要理解 Linux 内部的网络实现，需要先理清这些数据结构的作用。关键数据结构主要</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>计算机网络</category>
            
          
            
              <category>Linux</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>实现Arp报文发送和接收</title>
        <link>https://jiyang.site/posts/2019-12-27-%E5%AE%9E%E7%8E%B0arp%E6%8A%A5%E6%96%87%E5%8F%91%E9%80%81%E5%92%8C%E6%8E%A5%E6%94%B6/</link>
        <pubDate>Fri, 27 Dec 2019 20:33:51 +0000</pubDate>
        
        <atom:modified>Fri, 27 Dec 2019 20:33:51 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2019-12-27-%E5%AE%9E%E7%8E%B0arp%E6%8A%A5%E6%96%87%E5%8F%91%E9%80%81%E5%92%8C%E6%8E%A5%E6%94%B6/</guid>
        <description>继上次实现了 Ping 之后，尝试进入更底层的网络接口层实现局域网的 ARP 报文收发 ARP 协议概述 ARP(Address Resolution Protocol) 地址解析协议是用来通过网络层地址(IP地址)去寻找数据链</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
          
            
              <category>ARP</category>
            
          
        
        
          
            
              <category>计算机网络</category>
            
          
        
        
      </item>
      
      <item>
        <title>实现 ping Utility</title>
        <link>https://jiyang.site/posts/2019-12-15-%E5%AE%9E%E7%8E%B0-ping-utility/</link>
        <pubDate>Sun, 15 Dec 2019 22:25:43 +0000</pubDate>
        
        <atom:modified>Sun, 15 Dec 2019 22:25:43 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2019-12-15-%E5%AE%9E%E7%8E%B0-ping-utility/</guid>
        <description>为了加深自己对计算机网络的理解, 想自己实现一些操作系统提供的网络工具, 于是先从 ping 开始 首先, ping 命令的作用是检测两个网络设备在 TCP/IP 网络下是否能连通</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
          
            
              <category>ICMP</category>
            
          
        
        
          
            
              <category>计算机网络</category>
            
          
        
        
      </item>
      
      <item>
        <title>HTTPS 的 TLS 握手</title>
        <link>https://jiyang.site/posts/2019-11-05-https-%E7%9A%84-tls-%E6%8F%A1%E6%89%8B/</link>
        <pubDate>Tue, 05 Nov 2019 16:30:30 +0000</pubDate>
        
        <atom:modified>Tue, 05 Nov 2019 16:30:30 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2019-11-05-https-%E7%9A%84-tls-%E6%8F%A1%E6%89%8B/</guid>
        <description>&lt;p&gt;通过 Wireshark 抓包理解 HTTPS 的 SSL/TLS 握手&lt;/p&gt;</description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
          
            
              <category>TLS</category>
            
          
        
        
          
            
              <category>计算机网络</category>
            
          
        
        
      </item>
      
      <item>
        <title>通过 Wireshark 看网络分层</title>
        <link>https://jiyang.site/posts/2019-04-13-%E9%80%9A%E8%BF%87wireshark%E7%9C%8B%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82/</link>
        <pubDate>Sat, 13 Apr 2019 13:23:06 +0000</pubDate>
        
        <atom:modified>Sat, 13 Apr 2019 13:23:06 +0000</atom:modified>
        <guid>https://jiyang.site/posts/2019-04-13-%E9%80%9A%E8%BF%87wireshark%E7%9C%8B%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82/</guid>
        <description></description>
        
        <dc:creator>Yang</dc:creator>
        
        
        
        
        
          
            
              <category>计算机网络</category>
            
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
